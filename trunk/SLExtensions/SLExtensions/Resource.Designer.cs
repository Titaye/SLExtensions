//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SLExtensions {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SLExtensions.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A command with the same name &apos;{0}&apos; is already registered..
        /// </summary>
        internal static string CommandNameAlreadyRegistered {
            get {
                return ResourceManager.GetString("CommandNameAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversion not supported.
        /// </summary>
        internal static string ExceptionConversionNotSupported {
            get {
                return ResourceManager.GetString("ExceptionConversionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emf source cannot be re-used over multiple Emf controls.
        /// </summary>
        internal static string ExceptionEmfSourceReuse {
            get {
                return ResourceManager.GetString("ExceptionEmfSourceReuse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of stream reached while expecting more data.
        /// </summary>
        internal static string ExceptionEndOfStream {
            get {
                return ResourceManager.GetString("ExceptionEndOfStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream does not contain Enhanced Metafile data.
        /// </summary>
        internal static string ExceptionNoEmfStream {
            get {
                return ResourceManager.GetString("ExceptionNoEmfStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter {0} cannot be empty.
        /// </summary>
        internal static string ExceptionParameterEmpty {
            get {
                return ResourceManager.GetString("ExceptionParameterEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of string value {0} does not fit in range [{1}..{2}].
        /// </summary>
        internal static string ExceptionStringLength {
            get {
                return ResourceManager.GetString("ExceptionStringLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value parameter. It should implement IList.
        /// </summary>
        internal static string IndexConverterExceptionValueNotIList {
            get {
                return ResourceManager.GetString("IndexConverterExceptionValueNotIList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value parameter. It should implement IDictionnary.
        /// </summary>
        internal static string IndexerConverterExceptionValueNotIDictionnary {
            get {
                return ResourceManager.GetString("IndexerConverterExceptionValueNotIDictionnary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enhanced Metafile function {0} not supported.
        /// </summary>
        internal static string MessageEmfFunctionNotSupported {
            get {
                return ResourceManager.GetString("MessageEmfFunctionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enhanced Metafile function {0:X} unknown.
        /// </summary>
        internal static string MessageEmfFunctionUnknown {
            get {
                return ResourceManager.GetString("MessageEmfFunctionUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while writing XAML. Details:.
        /// </summary>
        internal static string MessageXamlError {
            get {
                return ResourceManager.GetString("MessageXamlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XAML for {0} not implemented yet.
        /// </summary>
        internal static string MessageXamlNotImplemented {
            get {
                return ResourceManager.GetString("MessageXamlNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XAML for Path Data is not available due to Silverlight runtime limitations.
        /// </summary>
        internal static string MessageXamlPathDataNotSupported {
            get {
                return ResourceManager.GetString("MessageXamlPathDataNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XAML truncated, reached the specified maximum number of {0} UI elements.
        /// </summary>
        internal static string MessageXamlTruncated {
            get {
                return ResourceManager.GetString("MessageXamlTruncated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid target type. Must be string..
        /// </summary>
        internal static string StringFormatConverterExceptionInvalidTargetType {
            get {
                return ResourceManager.GetString("StringFormatConverterExceptionInvalidTargetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid converter back parameter.
        /// </summary>
        internal static string UriConverterExceptionInvalidConvertBackParameter {
            get {
                return ResourceManager.GetString("UriConverterExceptionInvalidConvertBackParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid source for converting back. It should be an Uri.
        /// </summary>
        internal static string UriConverterExceptionInvalidConvertBackSource {
            get {
                return ResourceManager.GetString("UriConverterExceptionInvalidConvertBackSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid target type for converting back..
        /// </summary>
        internal static string UriConverterExceptionInvalidConvertBackTargetType {
            get {
                return ResourceManager.GetString("UriConverterExceptionInvalidConvertBackTargetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid converter parameter. It should be a valid uri (string or Uri).
        /// </summary>
        internal static string UriConverterExceptionInvalidParameter {
            get {
                return ResourceManager.GetString("UriConverterExceptionInvalidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid source. It should be a valid uri (string or Uri).
        /// </summary>
        internal static string UriConverterExceptionInvalidSource {
            get {
                return ResourceManager.GetString("UriConverterExceptionInvalidSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid target type &apos;{0}&apos;. It should be System.Uri.
        /// </summary>
        internal static string UriConverterExceptionInvalidtargetType {
            get {
                return ResourceManager.GetString("UriConverterExceptionInvalidtargetType", resourceCulture);
            }
        }
    }
}
